@model IEnumerable<UniversityManagementSystem.Models.Appoinment>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="iTitle">Appointments</h1>



@if (User.IsInRole("Administrator") || User.IsInRole("Dean") || User.IsInRole("Student"))
{
    <p><a asp-action="Create" class="btn btn-outline-primary"><i class="bi bi-plus-circle"></i> Create New</a></p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Dean)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reason)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsSlotActive)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) 
        {
            @if (User.IsInRole("Administrator"))
            {            
                <tr>
                    <td>                
                            <a href="mailto:@(item.Dean.Mail)">@item.Dean.FullName</a>
                    </td>
                    <td>
                           <a href="mailto:@(item.Student.Mail)">@item.Student.FullName</a>
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.Reason)
                    </td>
                    @{
                            DateTime fifteenMinutesLater = DateTime.Now.AddMinutes(15);
                            bool isExpired = item.Date < DateTime.Now;
                            bool isWithinFifteenMinutes = item.Date >= DateTime.Now && item.Date <= fifteenMinutesLater;
                            string colorStyle = isExpired ? "color: red;" : (isWithinFifteenMinutes ? "color: green;" : "color: gray;");
                            string fontWeightStyle = isExpired || isWithinFifteenMinutes ? "font-weight: none;" : "";
                    }
                    <td style="@colorStyle @fontWeightStyle">
                                @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @if (item.Date < DateTime.Now)
                        {
                            item.IsSlotActive = false;
                            <span style="color: red;">Passed</span>
                        }
                        else if (item.Date < DateTime.Now.AddMinutes(15))
                        {
                            item.IsSlotActive = true;
                            <span style="color: green; font-weight: bold;">Active</span>
                        }
                        else
                        {
                            item.IsSlotActive = true;
                            <span style="color: gray;">Inactive</span>
                        }
                    </td>
                    <td>
                        <a class="btn btn-outline-warning" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a> 
                        <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-info-circle"></i></a> 
                        <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash3"></i></a>
                    </td>
                </tr>
            }
            else if (item.Student.Mail == User.Identity.Name)
            {
                <tr>
                    <td>
                        <a href="mailto:@(item.Dean.Mail)">@item.Dean.FullName</a>
                    </td>
                    <td>
                        <a href="mailto:@(item.Student.Mail)">@item.Student.FullName</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reason)
                    </td>
                    @{
                        DateTime fifteenMinutesLater = DateTime.Now.AddMinutes(15);
                        bool isExpired = item.Date < DateTime.Now;
                        bool isWithinFifteenMinutes = item.Date >= DateTime.Now && item.Date <= fifteenMinutesLater;
                        string colorStyle = isExpired ? "color: red;" : (isWithinFifteenMinutes ? "color: green;" : "color: gray;");
                        string fontWeightStyle = isExpired || isWithinFifteenMinutes ? "font-weight: none;" : "";
                    }
                    <td style="@colorStyle @fontWeightStyle">
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @if (item.Date < DateTime.Now)
                        {
                            item.IsSlotActive = false;
                            <span style="color: red;">Passed</span>
                        }
                        else if (item.Date < DateTime.Now.AddMinutes(15))
                        {
                            item.IsSlotActive = true;
                            <span style="color: green; font-weight: bold;">Active</span>
                        }
                        else
                        {
                            item.IsSlotActive = true;
                            <span style="color: gray;">Inactive</span>
                        }
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-info-circle"></i></a>
                    </td>
                </tr>
            }
            else if (item.Dean.Mail == User.Identity.Name)
            {
                <tr>
                    <td>
                        <a href="mailto:@(item.Dean.Mail)">@item.Dean.FullName</a>
                    </td>
                    <td>
                        <a href="mailto:@(item.Student.Mail)">@item.Student.FullName</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reason)
                    </td>
                    @{
                        DateTime fifteenMinutesLater = DateTime.Now.AddMinutes(15);
                        bool isExpired = item.Date < DateTime.Now;
                        bool isWithinFifteenMinutes = item.Date >= DateTime.Now && item.Date <= fifteenMinutesLater;
                        string colorStyle = isExpired ? "color: red;" : (isWithinFifteenMinutes ? "color: green;" : "color: gray;");
                        string fontWeightStyle = isExpired || isWithinFifteenMinutes ? "font-weight: none;" : "";
                    }
                    <td style="@colorStyle @fontWeightStyle">
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @if (item.Date < DateTime.Now)
                        {
                            item.IsSlotActive = false;
                            <span style="color: red;">Passed</span>
                        }
                        else if (item.Date < DateTime.Now.AddMinutes(15))
                        {
                            item.IsSlotActive = true;
                            <span style="color: green; font-weight: bold;">Active</span>
                        }
                        else
                        {
                            item.IsSlotActive = true;
                            <span style="color: gray;">Inactive</span>
                        }
                    </td>
                    <td>
                        <a class="btn btn-outline-warning" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a> 
                        <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-info-circle"></i></a> 
                        <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash3"></i></a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

